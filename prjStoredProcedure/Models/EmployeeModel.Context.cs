//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace prjStoredProcedure.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmployeeEntities : DbContext
    {
        public EmployeeEntities()
            : base("name=EmployeeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tDepartment> tDepartment { get; set; }
        public virtual DbSet<tEmployee> tEmployee { get; set; }
    
        public virtual ObjectResult<usp_GetAllDepartment_Result> usp_GetAllDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllDepartment_Result>("usp_GetAllDepartment");
        }
    
        public virtual ObjectResult<usp_GetAllEmployee_Result> usp_GetAllEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllEmployee_Result>("usp_GetAllEmployee");
        }
    
        public virtual ObjectResult<usp_GetEmployeeByDepId_Result> usp_GetEmployeeByDepId(Nullable<int> fDepId)
        {
            var fDepIdParameter = fDepId.HasValue ?
                new ObjectParameter("fDepId", fDepId) :
                new ObjectParameter("fDepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetEmployeeByDepId_Result>("usp_GetEmployeeByDepId", fDepIdParameter);
        }
    
        public virtual ObjectResult<usp_GetEmployeeByEmpID_Result> usp_GetEmployeeByEmpID(Nullable<int> employeeId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetEmployeeByEmpID_Result>("usp_GetEmployeeByEmpID", employeeIdParameter);
        }
    
        public virtual int usp_PR_Employee_DeleteByPK(string fEmpId)
        {
            var fEmpIdParameter = fEmpId != null ?
                new ObjectParameter("fEmpId", fEmpId) :
                new ObjectParameter("fEmpId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PR_Employee_DeleteByPK", fEmpIdParameter);
        }
    
        public virtual int usp_PR_Employee_Insert(ObjectParameter fEmpId, string fName, string fPhone, Nullable<int> fDepId)
        {
            var fNameParameter = fName != null ?
                new ObjectParameter("fName", fName) :
                new ObjectParameter("fName", typeof(string));
    
            var fPhoneParameter = fPhone != null ?
                new ObjectParameter("fPhone", fPhone) :
                new ObjectParameter("fPhone", typeof(string));
    
            var fDepIdParameter = fDepId.HasValue ?
                new ObjectParameter("fDepId", fDepId) :
                new ObjectParameter("fDepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PR_Employee_Insert", fEmpId, fNameParameter, fPhoneParameter, fDepIdParameter);
        }
    
        public virtual int usp_PR_Employee_UpdateByPK(Nullable<int> fEmpId, string fName, string fPhone, Nullable<int> fDepId)
        {
            var fEmpIdParameter = fEmpId.HasValue ?
                new ObjectParameter("fEmpId", fEmpId) :
                new ObjectParameter("fEmpId", typeof(int));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("fName", fName) :
                new ObjectParameter("fName", typeof(string));
    
            var fPhoneParameter = fPhone != null ?
                new ObjectParameter("fPhone", fPhone) :
                new ObjectParameter("fPhone", typeof(string));
    
            var fDepIdParameter = fDepId.HasValue ?
                new ObjectParameter("fDepId", fDepId) :
                new ObjectParameter("fDepId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PR_Employee_UpdateByPK", fEmpIdParameter, fNameParameter, fPhoneParameter, fDepIdParameter);
        }
    }
}
